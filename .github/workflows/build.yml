name: build
on: [push]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DIR: .
      FILE: cv
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache APT packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: imagemagick
          version: 1.0
      - name: Install TeX Live
        uses: zauguin/install-texlive@v4
        with:
          packages: >
            scheme-basic
            latexmk
            parskip
            xcolor
            geometry
            tools
            enumitem
            supertabular
            titlesec
            multirow
      - name: Build LaTeX with Makefile
        run: make
      - name: Convert PDF to JPEG
        run: |
          convert-im6.q16 -density 300 ${{ env.DIR }}/${{ env.FILE }}.pdf[0] -quality 90 -flatten cv.jpeg
      - name: Prepare deployment
        run: |
          mkdir -p _site
          cp ${{ env.DIR }}/${{ env.FILE }}.pdf _site/
          cp cv.jpeg _site/
          cp index.html _site/
          cp CNAME _site/
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Purge Cloudflare cache
        if: ${{ success() }}
        env:
          CF_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          set -euo pipefail

          # check secret existence
          : "${CF_TOKEN:?CLOUDFLARE_API_TOKEN is required}"
          : "${CF_ZONE:?CLOUDFLARE_ZONE_ID is required}"

          # check token validity
          curl -sS -X GET "https://api.cloudflare.com/client/v4/user/tokens/verify" \
            -H "Authorization: Bearer $CF_TOKEN" \
            -H "Content-Type: application/json" | tee /tmp/cf_verify.json
          jq -e '.success == true' /tmp/cf_verify.json >/dev/null

          # purge the zone
          curl -sS -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONE/purge_cache" \
            -H "Authorization: Bearer $CF_TOKEN" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}' | tee /tmp/cf_purge.json
          jq -e '.success == true' /tmp/cf_purge.json >/dev/null
